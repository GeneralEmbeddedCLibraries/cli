// Copyright (c) 2022 Ziga Miklosic
// All Rights Reserved
// This software is under MIT licence (https://opensource.org/licenses/MIT)
////////////////////////////////////////////////////////////////////////////////
/**
*@file      cli_cfg.h
*@brief     Command Line Interface Configurations
*@author    Ziga Miklosic
*@date      11.09.2022
*@version   V0.0.1
*/
////////////////////////////////////////////////////////////////////////////////
/**
*@addtogroup CLI_CFG
* @{ <!-- BEGIN GROUP -->
*
*/
////////////////////////////////////////////////////////////////////////////////

#ifndef __CLI_CFG_H
#define __CLI_CFG_H

////////////////////////////////////////////////////////////////////////////////
// Includes
////////////////////////////////////////////////////////////////////////////////

// USER CODE BEGIN...

#include "project_config.h"

#include "revision/revision/src/version.h"

// USER CODE END...

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

// USER CODE BEGIN...

/**
 * 	Enable/Disable intro string
 *
 * 	@brief	Intro string will be transmitted at "cli_init()" function call,
 * 			if low level com driver are initialized OK.
 */
#define CLI_CFG_INTRO_STRING_EN					( 1 )

#if ( 1 == CLI_CFG_INTRO_STRING_EN )

	/**
	 * 	Intro strings
	 */
	#define CLI_CFG_INTRO_PROJECT_NAME			((const char*) "Evaluation of Inter-COM" )
	#define CLI_CFG_INTRO_SW_VER				((const char*) version_get_sw_str())
	#define CLI_CFG_INTRO_HW_VER				((const char*) version_get_hw_str())
#endif

/**
 * 	Termination string
 *
 * 	@note	Each "cli_printf" will have termination string appended to
 * 			its back.
 *
 * 			If not used leave empty. E.g. ""
 */
#define CLI_CFG_TERMINATION_STRING				((const uint8_t*) ( "\r\n" ))

/**
 * 	Printf buffer size
 *
 * 	Unit: bytes
 */
#define CLI_CFG_PRINTF_BUF_SIZE					( 128 )

/**
 * 	Maximum number of commands within a single table
 *
 * @note	Space for table command is allocated statically in compile time therefore
 * 			take special care defining that number. It is recommended to set
 * 			to a minimum as needed.
 *
 * 	@note 	Size of single table will increase with CLI_CFG_MAX_NUM_OF_COMMANDS
 * 			macro by following formula:
 *
 * 			size_of_cmd_table = ( 12 * CLI_CFG_MAX_NUM_OF_COMMANDS ) [bytes]
 */
#define CLI_CFG_MAX_NUM_OF_COMMANDS				( 10 )

/**
 * 	Maximum number of user defined command tables
 *
 * @note	Space for table command is allocated statically in compile time therefore
 * 			take special care defining that number. It is recommended to set
 * 			to a minimum as needed.
 *
 * 	@note 	Total size of all command table  will increase with CLI_CFG_MAX_NUM_OF_COMMANDS
 * 			and CLI_CFG_MAX_NUM_OF_USER_TABLES macro by following formula:
 *
 * 			tatal_size_of_all_cmd_tables = ( CLI_CFG_MAX_NUM_OF_USER_TABLES * (( 12 * CLI_CFG_MAX_NUM_OF_COMMANDS [bytes] ) + 4 )) [bytes]
 *
 * 	@note
 */
#define CLI_CFG_MAX_NUM_OF_USER_TABLES			( 8 )

/**
 * 	Enable/Disable debug mode
 */
#define CLI_CFG_DEBUG_EN						( 0 )

/**
 * 	Enable/Disable assertions
 */
#define CLI_CFG_ASSERT_EN						( 1 )

/**
 * 	Enable/Disable multiple access protection
 */
#define CLI_CFG_MUTEX_EN						( 1 )

/**
 * 	Enable/Disable communication channels
 */
#define CLI_CFG_CHANNEL_EN						( 1 )

#if ( 1 == CLI_CFG_CHANNEL_EN )

	/**
	 * 	List of communication channels
	 */
	typedef enum
	{
		// USER CODE BEGIN...

		eCLI_CH_WAR = 0,		/**<Warning channel */
		eCLI_CH_ERR,			/**<Error channel */


		// USER CODE END...

		eCLI_CH_NUM_OF			/**<Leave unchange - Must be last! */
	} cli_ch_opt_t;

#endif

/**
 * 	Debug communication port macros
 */
#if ( 1 == CLI_CFG_DEBUG_EN )
	#define CLI_DBG_PRINT( ... )				( com_dbg_print( eCOM_DBG_CH_NONE, (const char*) __VA_ARGS__ ))
#else
	#define CLI_DBG_PRINT( ... )				{ ; }

#endif

/**
 * 	 Assertion macros
 */
#if ( 1 == CLI_CFG_ASSERT_EN )
	#define CLI_ASSERT(x)						PROJECT_CONFIG_ASSERT(x)
#else
	#define CLI_ASSERT(x)						{ ; }
#endif

// USER CODE END...


////////////////////////////////////////////////////////////////////////////////
// Functions
////////////////////////////////////////////////////////////////////////////////


#endif // __CLI_CFG_H

////////////////////////////////////////////////////////////////////////////////
/**
* @} <!-- END GROUP -->
*/
////////////////////////////////////////////////////////////////////////////////
